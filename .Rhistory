# Plots Republican data points
points(rep.data$Year, rep.data$`Popular Vote Margin %`, pch = 15, col = "RED")
# Adds dotted line at 0%
abline(0, 0, lty = 2)
# Creates Legend
legend("topleft",
legend=c("Democratic Winners", "Republican Winners"),
pch=c(17,15),
col=c("BLUE", "RED"), cex=0.9)
i
View(election.data)
View(election.data)
class(election.data$`Popular Vote`)
class(election.data$`Turnout`)
# Removes % symbol in Turnout column
for (i in 1:length(election.data$Turnout)) {
election.data$Turnout[i] <- gsub("%", "", election.data$Turnout[i])
}
View(election.data)
# Changes Turnout column to a numeric
election.data$Turnout <- as.numeric(election.data$Turnout)
# Jacob Hample
# Professor Montgomery
# Applied Statistical Programming
# February 25, 2016
## Problem Set 4 ##
library(rvest)
library(plyr)
## Importng Data
wikiURL <- 'https://en.wikipedia.org/wiki/List_of_United_States_presidential_elections_by_popular_vote_margin'
# Imports tables from URL
temp <- wikiURL %>%
read_html %>%
html_nodes("table")
# Isolates the primary table from URL
election.data <- html_table(temp[[2]], fill = TRUE, trim = TRUE)
## Cleaning Data
# Changes column names
colnames(election.data) <- c("Election #",
"Year",
"Electoral College Winner",
"Electoral College Winner Party",
"Popular Vote %",
"Popular Vote Margin %",
"Popular Vote",
"Popular Vote Margin",
"Electoral College Runner-Up",
"Electoral College Runner-Up Party",
"Turnout")
# Removes redundant first two rows and outlier third row
election.data <- election.data[-c(1, 2, 3), ]
# Gets rid of strange duplicate formatting in Popular Vote Margin % column
for (i in 1:3) {
election.data$`Popular Vote Margin %`[i] <- substr(election.data$`Popular Vote Margin %`[i], 7, 12)
}
for (i in 4:28) {
election.data$`Popular Vote Margin %`[i] <- substr(election.data$`Popular Vote Margin %`[i], 7, 11)
}
# Removes % symbol in Popular Vote Margin % column
for (i in 1:length(election.data$`Popular Vote Margin %`)) {
election.data$`Popular Vote Margin %`[i] <- gsub("%", "", election.data$`Popular Vote Margin %`[i])
}
# Removes % symbol in Turnout column
for (i in 1:length(election.data$Turnout)) {
election.data$Turnout[i] <- gsub("%", "", election.data$Turnout[i])
}
# Removes negative symbols from first four rows of Popular Vote Margin % column
for (i in 1:3) {
election.data$`Popular Vote Margin %`[i] <- substr(election.data$`Popular Vote Margin %`[i], 2, 5)
}
# Changes Popular Vote Margin % column to a numeric
election.data$`Popular Vote Margin %` <- as.numeric(election.data$`Popular Vote Margin %`)
# Changes Turnout column to a numeric
election.data$Turnout <- as.numeric(election.data$Turnout)
# Restores negative values of Popular Vote Margin column
for (i in 1:3) {
election.data$`Popular Vote Margin %`[i] <- -1 * election.data$`Popular Vote Margin %`[i]
}
# Sorts data by year
election.data <- arrange(election.data, election.data$Year)
## Subsetting Data for Plots
# Subsets Democratic Electoral College winners and sorts by year
dem.rows <- grep("Dem.", election.data$`Electoral College Winner Party`)
dem.data <- election.data[dem.rows, ]
dem.data <- arrange(dem.data, dem.data$Year)
# Subsets Republican Electoral College winners and sorts by year
rep.rows <- grep("Rep.", election.data$`Electoral College Winner Party`)
rep.data <- election.data[rep.rows, ]
rep.data <- arrange(rep.data, rep.data$Year)
## Plotting Trends
# Plot 1
# Creates empty plot
plot(NULL, NULL,
xlab = "Year",
ylab = "Popular Vote Margin (%)",
main = "Popular Vote Margin by Year",
xlim = c(1820,2020),
ylim = c(-10, 40))
# Adds line chart of popular vote margin by year
lines(election.data$Year, election.data$`Popular Vote Margin %`, lwd = 2)
# Plots Democratic data points
points(dem.data$Year, dem.data$`Popular Vote Margin %`, pch = 17, col = "BLUE")
# Plots Republican data points
points(rep.data$Year, rep.data$`Popular Vote Margin %`, pch = 15, col = "RED")
# Adds dotted line at 0%
abline(0, 0, lty = 2)
# Creates Legend
legend("topleft",
legend = c("Democratic Winners", "Republican Winners"),
pch = c(17, 15),
col = c("BLUE", "RED"), cex = 0.9)
# Plot 2
# Creates empty plot
plot(NULL, NULL,
xlab = "Year",
ylab = "Voter Turnout",
main = "Voter Turnout by Year",
xlim = c(1820,2020),
ylim = c(40, 90))
# Adds line chart of voter turnout by year
lines(election.data$Year, election.data$Turnout, lwd = 2)
# Plots Democratic data points
points(dem.data$Year, dem.data$Turnout, pch = 17, col = "BLUE")
# Plots Republican data points
points(rep.data$Year, rep.data$Turnout, pch = 15, col = "RED")
View(election.data)
# Creates Legend
legend("topright",
legend = c("Democratic Winners", "Republican Winners"),
pch = c(17, 15),
col = c("BLUE", "RED"), cex = 0.9)
# Jacob Hample
# Professor Montgomery
# Applied Statistical Programming
# February 25, 2016
## Problem Set 4 ##
library(rvest)
library(plyr)
## Importng Data
wikiURL <- 'https://en.wikipedia.org/wiki/List_of_United_States_presidential_elections_by_popular_vote_margin'
# Imports tables from URL
temp <- wikiURL %>%
read_html %>%
html_nodes("table")
# Isolates the primary table from URL
election.data <- html_table(temp[[2]], fill = TRUE, trim = TRUE)
## Cleaning Data
# Changes column names
colnames(election.data) <- c("Election #",
"Year",
"Electoral College Winner",
"Electoral College Winner Party",
"Popular Vote %",
"Popular Vote Margin %",
"Popular Vote",
"Popular Vote Margin",
"Electoral College Runner-Up",
"Electoral College Runner-Up Party",
"Turnout")
# Removes redundant first two rows
election.data <- election.data[-c(1, 2), ]
# Removes strange duplicate formatting in Popular Vote Margin % column
election.data$`Popular Vote Margin %`[1] <- substr(election.data$`Popular Vote Margin %`[1], 7, 13)
for (i in 2:4) {
election.data$`Popular Vote Margin %`[i] <- substr(election.data$`Popular Vote Margin %`[i], 7, 12)
}
for (i in 5:29) {
election.data$`Popular Vote Margin %`[i] <- substr(election.data$`Popular Vote Margin %`[i], 7, 11)
}
# Removes % symbol in Popular Vote Margin % column
for (i in 1:length(election.data$`Popular Vote Margin %`)) {
election.data$`Popular Vote Margin %`[i] <- gsub("%", "", election.data$`Popular Vote Margin %`[i])
}
# Removes % symbol in Turnout column
for (i in 1:length(election.data$Turnout)) {
election.data$Turnout[i] <- gsub("%", "", election.data$Turnout[i])
}
# Removes negative symbols from first four rows of Popular Vote Margin % column
election.data$`Popular Vote Margin %`[1] <- substr(election.data$`Popular Vote Margin %`[1], 2, 6)
for (i in 2:4) {
election.data$`Popular Vote Margin %`[i] <- substr(election.data$`Popular Vote Margin %`[i], 2, 5)
}
# Changes Popular Vote Margin % column to a numeric
election.data$`Popular Vote Margin %` <- as.numeric(election.data$`Popular Vote Margin %`)
# Changes Turnout column to a numeric
election.data$Turnout <- as.numeric(election.data$Turnout)
# Restores negative values of Popular Vote Margin column
for (i in 1:4) {
election.data$`Popular Vote Margin %`[i] <- -1 * election.data$`Popular Vote Margin %`[i]
}
# Sorts data by year
election.data <- arrange(election.data, election.data$Year)
View(election.data)
# Jacob Hample
# Professor Montgomery
# Applied Statistical Programming
# February 25, 2016
## Problem Set 4 ##
library(rvest)
library(plyr)
## Importng Data
wikiURL <- 'https://en.wikipedia.org/wiki/List_of_United_States_presidential_elections_by_popular_vote_margin'
# Imports tables from URL
temp <- wikiURL %>%
read_html %>%
html_nodes("table")
# Isolates the primary table from URL
election.data <- html_table(temp[[2]], fill = TRUE, trim = TRUE)
## Cleaning Data
# Changes column names
colnames(election.data) <- c("Election #",
"Year",
"Electoral College Winner",
"Electoral College Winner Party",
"Popular Vote %",
"Popular Vote Margin %",
"Popular Vote",
"Popular Vote Margin",
"Electoral College Runner-Up",
"Electoral College Runner-Up Party",
"Turnout")
# Removes redundant first two rows
election.data <- election.data[-c(1, 2), ]
# Removes strange duplicate formatting in Popular Vote Margin % column
election.data$`Popular Vote Margin %`[1] <- substr(election.data$`Popular Vote Margin %`[1], 7, 13)
for (i in 2:4) {
election.data$`Popular Vote Margin %`[i] <- substr(election.data$`Popular Vote Margin %`[i], 7, 12)
}
for (i in 5:29) {
election.data$`Popular Vote Margin %`[i] <- substr(election.data$`Popular Vote Margin %`[i], 7, 11)
}
# Removes % symbol in Popular Vote Margin % column
for (i in 1:length(election.data$`Popular Vote Margin %`)) {
election.data$`Popular Vote Margin %`[i] <- gsub("%", "", election.data$`Popular Vote Margin %`[i])
}
# Removes % symbol in Turnout column
for (i in 1:length(election.data$Turnout)) {
election.data$Turnout[i] <- gsub("%", "", election.data$Turnout[i])
}
# Removes negative symbols from first four rows of Popular Vote Margin % column
election.data$`Popular Vote Margin %`[1] <- substr(election.data$`Popular Vote Margin %`[1], 2, 6)
for (i in 2:4) {
election.data$`Popular Vote Margin %`[i] <- substr(election.data$`Popular Vote Margin %`[i], 2, 5)
}
# Changes Popular Vote Margin % column to a numeric
election.data$`Popular Vote Margin %` <- as.numeric(election.data$`Popular Vote Margin %`)
# Changes Turnout column to a numeric
election.data$Turnout <- as.numeric(election.data$Turnout)
# Restores negative values of Popular Vote Margin column
for (i in 1:4) {
election.data$`Popular Vote Margin %`[i] <- -1 * election.data$`Popular Vote Margin %`[i]
}
View(election.data)
View(election.data)
election.data <- arrange(election.data, election.data$Year)
View(election.data)
third.rows <- grep("D.-R." | "Whig", election.data$`Electoral College Winner Party`)
third.rows <- paste0(grep("D.-R.", election.data$`Electoral College Winner Party`),
grep("Whig", election.data$`Electoral College Winner Party`))
third.data <- election.data[third.rows, ]
View(third.data)
dr.rows <- grep("D.-R.", election.data$`Electoral College Winner Party`)
whig.rows <- grep("Whig", election.data$`Electoral College Winner Party`)
dr.rows
third.rows <- paste0(DR.rows, whig.rows)
third.rows <- paste0(dr.rows, whig.rows)
dr.rows <- as.integer(grep("D.-R.", election.data$`Electoral College Winner Party`))
whig.rows <- as.integer(grep("Whig", election.data$`Electoral College Winner Party`))
third.rows <- paste0(dr.rows, whig.rows)
third.rows <- paste(dr.rows, whig.rows)
class(dr.rows)
third.rows <- rbind(dr.rows, whig.rows)
dr.rows <- grep("D.-R.", election.data$`Electoral College Winner Party`)
whig.rows <- grep("Whig", election.data$`Electoral College Winner Party`)
third.rows <- rbind(dr.rows, whig.rows)
third.rows <- cbind(dr.rows, whig.rows)
class(dr.rows)
whig.rows
class(whig.rows)
third.rows <- c(dr.rows, whig.rows)
third.data <- election.data[third.rows, ]
third.data
View(third.data)
# Jacob Hample
# Professor Montgomery
# Applied Statistical Programming
# February 25, 2016
## Problem Set 4 ##
library(rvest)
library(plyr)
## Importng Data
wikiURL <- 'https://en.wikipedia.org/wiki/List_of_United_States_presidential_elections_by_popular_vote_margin'
# Imports tables from URL
temp <- wikiURL %>%
read_html %>%
html_nodes("table")
# Isolates the primary table from URL
election.data <- html_table(temp[[2]], fill = TRUE, trim = TRUE)
## Cleaning Data
# Changes column names
colnames(election.data) <- c("Election #",
"Year",
"Electoral College Winner",
"Electoral College Winner Party",
"Popular Vote %",
"Popular Vote Margin %",
"Popular Vote",
"Popular Vote Margin",
"Electoral College Runner-Up",
"Electoral College Runner-Up Party",
"Turnout")
# Removes redundant first two rows
election.data <- election.data[-c(1, 2), ]
# Removes strange duplicate formatting in Popular Vote Margin % column
election.data$`Popular Vote Margin %`[1] <- substr(election.data$`Popular Vote Margin %`[1], 7, 13)
for (i in 2:4) {
election.data$`Popular Vote Margin %`[i] <- substr(election.data$`Popular Vote Margin %`[i], 7, 12)
}
for (i in 5:29) {
election.data$`Popular Vote Margin %`[i] <- substr(election.data$`Popular Vote Margin %`[i], 7, 11)
}
# Removes % symbol in Popular Vote Margin % column
for (i in 1:length(election.data$`Popular Vote Margin %`)) {
election.data$`Popular Vote Margin %`[i] <- gsub("%", "", election.data$`Popular Vote Margin %`[i])
}
# Removes % symbol in Turnout column
for (i in 1:length(election.data$Turnout)) {
election.data$Turnout[i] <- gsub("%", "", election.data$Turnout[i])
}
# Removes negative symbols from first four rows of Popular Vote Margin % column
election.data$`Popular Vote Margin %`[1] <- substr(election.data$`Popular Vote Margin %`[1], 2, 6)
for (i in 2:4) {
election.data$`Popular Vote Margin %`[i] <- substr(election.data$`Popular Vote Margin %`[i], 2, 5)
}
# Changes Popular Vote Margin % column to a numeric
election.data$`Popular Vote Margin %` <- as.numeric(election.data$`Popular Vote Margin %`)
# Changes Turnout column to a numeric
election.data$Turnout <- as.numeric(election.data$Turnout)
# Restores negative values of Popular Vote Margin column
for (i in 1:4) {
election.data$`Popular Vote Margin %`[i] <- -1 * election.data$`Popular Vote Margin %`[i]
}
# Sorts data by year
election.data <- arrange(election.data, election.data$Year)
View(election.data)
## Subsetting Data for Plots
# Subsets Democratic Electoral College winners and sorts by year
dem.rows <- grep("Dem.", election.data$`Electoral College Winner Party`)
dem.data <- election.data[dem.rows, ]
View(dem.data)
#dem.data <- arrange(dem.data, dem.data$Year)
# Subsets Republican Electoral College winners and sorts by year
rep.rows <- grep("Rep.", election.data$`Electoral College Winner Party`)
rep.data <- election.data[rep.rows, ]
#rep.data <- arrange(rep.data, rep.data$Year)
# Subsets Third Party Electoral College winners and sorts by year
dr.rows <- grep("D.-R.", election.data$`Electoral College Winner Party`)
whig.rows <- grep("Whig", election.data$`Electoral College Winner Party`)
third.rows <- c(dr.rows, whig.rows)
third.data <- election.data[third.rows, ]
#third.data <- arrange(third.data, third.data$Year)
View(third.data)
## Plotting Trends
# Plot 1
# Creates empty plot
plot(NULL, NULL,
xlab = "Year",
ylab = "Popular Vote Margin (%)",
main = "Popular Vote Margin by Year",
xlim = c(1820,2020),
ylim = c(-10, 40))
# Adds line chart of popular vote margin by year
lines(election.data$Year, election.data$`Popular Vote Margin %`, lwd = 2)
# Plots Democratic data points
points(dem.data$Year, dem.data$`Popular Vote Margin %`, pch = 17, col = "BLUE")
# Plots Republican data points
points(rep.data$Year, rep.data$`Popular Vote Margin %`, pch = 15, col = "RED")
# Plots Third Party data points
points(third.data$Year, third.data$`Popular Vote Margin %`, pch = 16, col = "PURPLE")
# Adds dotted line at 0%
abline(0, 0, lty = 2)
# Creates Legend
legend("topleft",
legend = c("Democratic Winners", "Republican Winners", "Third Party Winners"),
pch = c(17, 15, 16),
col = c("BLUE", "RED", "PURPLE"), cex = 0.9)
## Jacob Hample
## Professor Montgomery
## Applied Statistical Programming
## March 10, 2026
### Problem Set 5 ###
# Sets working directory
setwd("~/Google Drive/Senior Year/Spring 2016/Statistical Programming/Problem Sets/PS5")
# Sets seed so that randomization is constant
set.seed(12435)
# Keeps inputted strings from being categorized as factors
options(stringsAsFactors=F)
# Additional packages used
library(foreign)
# Reads in data
anes <- read.dta("anes_timeseries_2012_stata12.dta")
dim(ames)
dim(anes)
length(anes)
### Question 1
## Selecting and Cleaning Variables
# VARIABLE 1 : finance_finnext
# Question posed:
# Now looking ahead, do you think that a year from now
# [you / you and your family living here] will be BETTER OFF financially,
# WORSE OFF, or JUST ABOUT THE SAME as now?
# Recoding finance_finnext variable to make it more legible and remove missing responses
anes$finance_finnext <- as.factor(ifelse(anes$finance_finnext == "1. Better","Better",
ifelse(anes$finance_finnext == "2. Worse","Worse",
ifelse(anes$finance_finnext == "3. The same", "Same",
NA))))
# VARIABLE 2: health_insured
# Question posed:
# Do you presently have any kind of health insurance?
# Recoding health_insured variable as a dummy variable after removing missing responses
anes$health_insured <- as.factor(ifelse(anes$health_insured == "1. Yes", 1,
ifelse(anes$health_insured == "2. No", 0,
NA)))
# VARIABLE 3: relig_import
# Question posed:
# Do you consider religion to be an IMPORTANT part of your life, or NOT?
# Recoding relig_import variable as a dummy variable after removing missing responses
anes$relig_import <- as.factor(ifelse(anes$relig_import == "1. Important", 1,
ifelse(anes$relig_import == "2. Not important", 0,
NA)))
anes$finance_finnext
anes$health_insured
class(anes$health_insured)
## Jacob Hample
## Professor Montgomery
## Applied Statistical Programming
## March 10, 2026
### Problem Set 5 ###
# Sets working directory
setwd("~/Google Drive/Senior Year/Spring 2016/Statistical Programming/Problem Sets/PS5")
# Sets seed so that randomization is constant
set.seed(12435)
# Keeps inputted strings from being categorized as factors
options(stringsAsFactors = FALSE)
# Additional packages used
library(foreign)
# Reads in data
anes <- read.dta("anes_timeseries_2012_stata12.dta")
anes$health_insured <- as.numeric(ifelse(anes$health_insured == "1. Yes", 1,
ifelse(anes$health_insured == "2. No", 0,
NA)))
anes$health_insured
class(anes$health_insured)
## Jacob Hample
## Professor Montgomery
## Applied Statistical Programming
## March 10, 2026
### Problem Set 5 ###
# Sets working directory
setwd("~/Google Drive/Senior Year/Spring 2016/Statistical Programming/Problem Sets/PS5")
# Sets seed so that randomization is constant
set.seed(12435)
# Keeps inputted strings from being categorized as factors
options(stringsAsFactors = FALSE)
# Additional packages used
library(foreign)
# Reads in data
anes <- read.dta("anes_timeseries_2012_stata12.dta")
### Question 1
## Selecting and Cleaning Variables
# VARIABLE 1 : finance_finnext
# Question posed:
# Now looking ahead, do you think that a year from now
# [you / you and your family living here] will be BETTER OFF financially,
# WORSE OFF, or JUST ABOUT THE SAME as now?
# Recoding finance_finnext variable to make it more legible and remove missing responses
anes$finance_finnext <- as.factor(ifelse(anes$finance_finnext == "1. Better","Better",
ifelse(anes$finance_finnext == "2. Worse","Worse",
ifelse(anes$finance_finnext == "3. The same", "Same",
NA))))
# VARIABLE 2: health_insured
# Question posed:
# Do you presently have any kind of health insurance?
# Recoding health_insured variable as a dummy variable after removing missing responses
anes$health_insured <- as.numeric(ifelse(anes$health_insured == "1. Yes", 1,
ifelse(anes$health_insured == "2. No", 0,
NA)))
# VARIABLE 3: relig_import
# Question posed:
# Do you consider religion to be an IMPORTANT part of your life, or NOT?
# Recoding relig_import variable as a dummy variable after removing missing responses
anes$relig_import <- as.numeric(ifelse(anes$relig_import == "1. Important", 1,
ifelse(anes$relig_import == "2. Not important", 0,
NA)))
## Splitting Data
# Separates dataset into training and test halves
train <- sample(dim(anes)[1], dim(anes)[1] / 2, replace = FALSE)
training.anes <- anes[train, ]
test.anes <- anes[-train, ]
training.anes$finance_finnext
training.anes$health_insured
training.anes$relig_import
## Creating Models
# Obama's feeling thermometer score as function of personal financial optimism
model1 <- lm(ft_dpc ~ finance_finnext, training.anes)
model1
# Obama's feeling thermometer score as function of presence of health insurance
model2 <- lm(ft_dpc ~ health_insured, training.anes)
model2
# Obama's feeling thermometer score as function of importance of religion
model3 <- lm(ft_dpc ~ relig_import, training.anes)
model3
